<?php

namespace Cube\Tests\Units\Models;

use Cube\Data\Models\Model;
use Cube\Data\Models\ModelField;
use Cube\Data\Models\Relations\HasMany;
use Cube\Data\Models\Relations\HasOne;
use Cube\Utils\Attributes\Generated;

/**
 * Generated by `Cube\Data\Models\ModelGenerator\Table`
 * @property int $id
 * @property string $login
 * @property string $password
 * @property int $type
 * @property UserType $usertype
 * @property User[] $modules
 */
class User extends Model
{
    #[Generated]
    public static function table(): string
    {
        return 'user';
    }

    #[Generated]
    public static function primaryKey(): string
    {
        return 'id';
    }

    /**
     * @return array<string,ModelField>
     */
    #[Generated]
    public static function fields(): array
    {
        return [
            'id' => (new ModelField('id'))->type('INTEGER')->autoIncrement()->nullable(false)->hasDefault(true),
            'login' => (new ModelField('login'))->type('STRING')->nullable(false)->hasDefault(false),
            'password' => (new ModelField('password'))->type('STRING')->nullable(false)->hasDefault(false),
            'type' => (new ModelField('type'))->type('INTEGER')->nullable(false)->hasDefault(false)->references(UserType::class,'id')
        ];
    }

    #[Generated]
    public function usertype(): HasOne
    {
        return $this->hasOne('usertype', 'type', UserType::class, 'id');
    }

    #[Generated]
    public function modules(): HasMany
    {
        return $this->hasMany('modules', User::class, 'id', 'user');
    }

    #[Generated]
    public static function relations(): array
    {
        return [
            "modules",
            "usertype",
        ];
    }

}